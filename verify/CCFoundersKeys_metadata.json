{"compiler":{"version":"0.8.10+commit.fc410830"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"reserve_","type":"uint256"},{"internalType":"uint256","name":"maxBatch_","type":"uint256"},{"internalType":"uint256","name":"maxSupply_","type":"uint256"},{"internalType":"uint256","name":"royaltyRate_","type":"uint256"},{"internalType":"uint256","name":"wlMintPrice_","type":"uint256"},{"internalType":"uint256","name":"publicMintPrice_","type":"uint256"},{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"string","name":"baseURI_","type":"string"},{"internalType":"address[]","name":"wallets_","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"CCFoundersKeys_ARRAY_LENGTH_MISMATCH","type":"error"},{"inputs":[],"name":"CCFoundersKeys_FORBIDDEN","type":"error"},{"inputs":[],"name":"CCFoundersKeys_INCORRECT_PRICE","type":"error"},{"inputs":[],"name":"CCFoundersKeys_INSUFFICIENT_KEY_BALANCE","type":"error"},{"inputs":[],"name":"CCFoundersKeys_MAX_BATCH","type":"error"},{"inputs":[],"name":"CCFoundersKeys_MAX_RESERVE","type":"error"},{"inputs":[],"name":"CCFoundersKeys_MAX_SUPPLY","type":"error"},{"inputs":[],"name":"CCFoundersKeys_NO_ETHER_BALANCE","type":"error"},{"inputs":[],"name":"CCFoundersKeys_TRANSFER_FAIL","type":"error"},{"inputs":[],"name":"IERC2981_INVALID_ROYALTIES","type":"error"},{"inputs":[],"name":"IERC721Enumerable_INDEX_OUT_OF_BOUNDS","type":"error"},{"inputs":[],"name":"IERC721Enumerable_OWNER_INDEX_OUT_OF_BOUNDS","type":"error"},{"inputs":[],"name":"IERC721_APPROVE_CALLER","type":"error"},{"inputs":[],"name":"IERC721_APPROVE_OWNER","type":"error"},{"inputs":[],"name":"IERC721_CALLER_NOT_APPROVED","type":"error"},{"inputs":[],"name":"IERC721_NONEXISTANT_TOKEN","type":"error"},{"inputs":[],"name":"IERC721_NON_ERC721_RECEIVER","type":"error"},{"inputs":[],"name":"IERC721_NULL_ADDRESS_BALANCE","type":"error"},{"inputs":[],"name":"IERC721_NULL_ADDRESS_TRANSFER","type":"error"},{"inputs":[],"name":"IOwnable_NOT_OWNER","type":"error"},{"inputs":[],"name":"IPausable_PRESALE_NOT_OPEN","type":"error"},{"inputs":[],"name":"IPausable_SALE_NOT_CLOSED","type":"error"},{"inputs":[],"name":"IPausable_SALE_NOT_OPEN","type":"error"},{"inputs":[],"name":"IWhitelistable_CONSUMED","type":"error"},{"inputs":[],"name":"IWhitelistable_FORBIDDEN","type":"error"},{"inputs":[],"name":"IWhitelistable_NOT_SET","type":"error"},{"inputs":[],"name":"IWhitelistable_NO_ALLOWANCE","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"fromAddress","type":"address"},{"indexed":true,"internalType":"address","name":"toAddress","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address[]","name":"tos","type":"address[]"},{"indexed":true,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"PaymentReleased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum IPausable.SaleState","name":"previousState","type":"uint8"},{"indexed":true,"internalType":"enum IPausable.SaleState","name":"newState","type":"uint8"}],"name":"SaleStateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"MAX_BATCH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PUBLIC_MINT_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WL_MINT_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts_","type":"address[]"},{"internalType":"uint256[]","name":"amounts_","type":"uint256[]"}],"name":"airdrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"anonClaimList","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to_","type":"address"},{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner_","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner_","type":"address"}],"name":"balanceOfStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty_","type":"uint256"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty_","type":"uint256"},{"internalType":"uint256","name":"qtyStaked_","type":"uint256"}],"name":"claimAndStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner_","type":"address"},{"internalType":"address","name":"operator_","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty_","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"qty_","type":"uint256"},{"internalType":"uint256","name":"qtyStaked_","type":"uint256"}],"name":"mintAndStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proof_","type":"bytes32[]"}],"name":"mintPreSale","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proof_","type":"bytes32[]"}],"name":"mintPreSaleAndStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"ownerOfStaked","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"},{"internalType":"uint256","name":"salePrice_","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"to_","type":"address"},{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"to_","type":"address"},{"internalType":"uint256","name":"tokenId_","type":"uint256"},{"internalType":"bytes","name":"data_","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"saleState","outputs":[{"internalType":"enum IPausable.SaleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts_","type":"address[]"},{"internalType":"uint256[]","name":"amounts_","type":"uint256[]"}],"name":"setAnonClaimList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator_","type":"address"},{"internalType":"bool","name":"approved_","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"proxyRegistryAddress_","type":"address"}],"name":"setProxyRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"royaltyRecipient_","type":"address"},{"internalType":"uint256","name":"royaltyRate_","type":"uint256"}],"name":"setRoyaltyInfo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum IPausable.SaleState","name":"newState_","type":"uint8"}],"name":"setSaleState","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"root_","type":"bytes32"}],"name":"setWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId_","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index_","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner_","type":"address"},{"internalType":"uint256","name":"index_","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"to_","type":"address"},{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner_","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId_","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"airdrop(address[],uint256[])":{"details":"Mints `amounts_` tokens and transfers them to `accounts_`.  Requirements:  - Caller must be the contract owner. - `accounts_` and `amounts_` must have the same length. - There must be enough tokens left in the reserve."},"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"Returns the number of tokens owned by `tokenOwner_`."},"balanceOfStaked(address)":{"details":"Returns the number of tokens staked by `tokenOwner_`."},"claim(uint256)":{"details":"Mints `qty_` tokens and transfers them to the caller.  Requirements:  - Sale state must be {SaleState.PRESALE}. - There must be enough tokens left to mint outside of the reserve. - Caller must be whitelisted."},"claimAndStake(uint256,uint256)":{"details":"Mints `qty_` tokens, stakes `qtyStaked_` of them to the count of the caller, and transfers the remaining to them.  Requirements:  - Sale state must be {SaleState.PRESALE}. - There must be enough tokens left to mint outside of the reserve. - Caller must be whitelisted. - If `qtyStaked_` is higher than `qty_`, only `qty_` tokens are staked."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId_` token. Requirements: - `tokenId_` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator_` is allowed to manage all of the assets of `tokenOwner_`. See {setApprovalForAll}"},"mint(uint256)":{"details":"Mints `qty_` tokens and transfers them to the caller.  Requirements:  - Sale state must be {SaleState.SALE}. - There must be enough tokens left to mint outside of the reserve. - Caller must send enough ether to pay for `qty_` tokens at public sale price."},"mintAndStake(uint256,uint256)":{"details":"Mints `qty_` tokens, stakes `qtyStaked_` of them to the count of the caller, and transfers the remaining to them.  Requirements:  - Sale state must be {SaleState.SALE}. - There must be enough tokens left to mint outside of the reserve. - Caller must send enough ether to pay for `qty_` tokens at public sale price. - If `qtyStaked_` is higher than `qty_`, only `qty_` tokens are staked."},"mintPreSale(bytes32[])":{"details":"Mints a token and transfers it to the caller.  Requirements:  - Sale state must be {SaleState.PRESALE}. - There must be enough tokens left to mint outside of the reserve. - Caller must send enough ether to pay for 1 token at presale price. - Caller must be whitelisted."},"mintPreSaleAndStake(bytes32[])":{"details":"Mints a token and stakes it to the count of the caller.  Requirements:  - Sale state must be {SaleState.PRESALE}. - There must be enough tokens left to mint outside of the reserve. - Caller must send enough ether to pay for 1 token at presale price. - Caller must be whitelisted."},"name()":{"details":"See {IERC721Metadata-name}."},"onERC721Received(address,address,uint256,bytes)":{"details":"Signals that this contract knows how to handle ERC721 tokens."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"Returns the owner of token number `tokenId_`. Requirements: - `tokenId_` must exist."},"ownerOfStaked(uint256)":{"details":"Returns the owner of staked token number `tokenId_`. Requirements: - `tokenId_` must exist."},"royaltyInfo(uint256,uint256)":{"details":"See {IERC2981-royaltyInfo}. Requirements: - `tokenId_` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}.  Note: We can ignore `from_` as we can compare everything to the actual token owner,  but we cannot remove this parameter to stay in conformity with IERC721"},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}.  Note: We can ignore `from_` as we can compare everything to the actual token owner,  but we cannot remove this parameter to stay in conformity with IERC721"},"setAnonClaimList(address[],uint256[])":{"details":"Saves `accounts_` in the anon claim list.  Requirements:  - Caller must be the contract owner. - Sale state must be {SaleState.CLOSED}. - `accounts_` and `amounts_` must have the same length."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"setProxyRegistry(address)":{"details":"See {ITradable-setProxyRegistry}.  Requirements:  - Caller must be the contract owner."},"setRoyaltyInfo(address,uint256)":{"details":"Updates the royalty recipient and rate.  Requirements:  - Caller must be the contract owner."},"setSaleState(uint8)":{"details":"See {IPausable-setSaleState}.  Requirements:  - Caller must be the contract owner."},"setWhitelist(bytes32)":{"details":"See {IWhitelistable-setWhitelist}.  Requirements:  - Caller must be the contract owner. - Sale state must be {SaleState.CLOSED}."},"stake(uint256)":{"details":"Stakes the token `tokenId_` to the count of its owner.  Requirements:  - Caller must be allowed to manage `tokenId_` or its owner's tokens. - `tokenId_` must exist."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}.  Note: We can ignore `from_` as we can compare everything to the actual token owner,  but we cannot remove this parameter to stay in conformity with IERC721"},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unstake(uint256)":{"details":"Unstakes the token `tokenId_` and returns it to its owner.  Requirements:  - Caller must be allowed to manage `tokenId_` or its owner's tokens. - `tokenId_` must exist."},"withdraw()":{"details":"Withdraws all the money stored in the contract and splits it amongst the set wallets.  Requirements:  - Caller must be the contract owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/CCFoundersKeys.sol":"CCFoundersKeys"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":10000},"remappings":[]},"sources":{"contracts/CCFoundersKeys.sol":{"keccak256":"0x9ca611c4ada974ce1821f036f861c3e20a81f851ac74dd79602744bc8bbd8ef2","license":"MIT","urls":["bzz-raw://c5363597ef3162767f7a88a3814d676e523cf20a80a3d90254b08a7eb04ca4b1","dweb:/ipfs/QmbrGNnAdqbfGxXTh8KYjokBc1wz154MEUg2ixWQhswXuk"]},"contracts/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"contracts/ERC2981Base.sol":{"keccak256":"0x4e165de5df1c5e9918855e41de7199403034e78426723aaaae2f7ce76f9a0216","license":"MIT","urls":["bzz-raw://3304ee8404a27efc3f9558a766c13c923b19750a2670b398dd7e993760ffe0c6","dweb:/ipfs/QmPio1eGfCn4aBGzUchMBk7SF3b46FUpwrYNWGXDzvZzV1"]},"contracts/ERC721Batch.sol":{"keccak256":"0x09906a342111bff4140d4b92a2a25fdbe2bfb51cef5479d4ebe3b95b7ef9e50a","license":"MIT","urls":["bzz-raw://3e99b72ef9669152a957731adece1c192d14aeb91ca33e334a55964939dd017b","dweb:/ipfs/Qmes78AmdN72XVudYPq9FDdj8JXNhKFHPxtqoU2DycSsW6"]},"contracts/ERC721BatchEnumerable.sol":{"keccak256":"0x981bb315adaaec0cf4688ea95762e338efcacab2336ebf6a7d1712f7f446e7b6","license":"MIT","urls":["bzz-raw://b6230bc62cf7b93a2bcaf418911964cc73c7b5e70e8fca391ab628c586b1f630","dweb:/ipfs/QmeSEW6bcs1JKF8pv2L2B3zhL5Hbyaqu37czT1YU4JfXvK"]},"contracts/ERC721BatchStakable.sol":{"keccak256":"0x3fad2ad1e5afe5bf05c50589f1acb305d7f7263e1bd8f94ea84d7c5e99f03e62","license":"MIT","urls":["bzz-raw://cfa2b8bc26a540ebbe5c6cf271c18fb638cce71cc390a325cbe08611c9f8b847","dweb:/ipfs/QmZiNbYMWu81GF4HYz44uB94zisZnx3NHzzcmwunocZzKn"]},"contracts/IERC165.sol":{"keccak256":"0x0a9d562a248a740c982d5218ce9deabcaa77a3df4d5915dfc0b352496361abe5","license":"MIT","urls":["bzz-raw://fb9e669d320afc118d428025c556152c270d331889bc883134eaa0dcc445f35c","dweb:/ipfs/QmPku3FK9HZg2kzuGZsYww6daMMcLrYHSpc7cVVMB2Undm"]},"contracts/IERC2981.sol":{"keccak256":"0xee314ec423659775cb02377e98a1444f8d22841fde59be8547e4e42510536d17","license":"MIT","urls":["bzz-raw://84308c085d4a4d95b68bb41c321ec550969c4b08cfdf816f5d035348b85535d6","dweb:/ipfs/QmfE6pnyVS3z7Upn6KLXUjYKbS4M2Qh79JKb3rReNQ4D53"]},"contracts/IERC721.sol":{"keccak256":"0x64984813f269a5107ebace224a0842026ff938c8f6fe6a1d24b9543a1b7ac5b5","license":"MIT","urls":["bzz-raw://991a36964c91afbee7d06f47b5848e8c1265679783c9378bdbddee21cff5bd15","dweb:/ipfs/Qmbp45VVH7A9iFtuWM2QxudfzpJ9mquHsNoRgqyVrBYTgb"]},"contracts/IERC721Enumerable.sol":{"keccak256":"0xafec2ef063e6da66e9038a46fe042a8d65e4be6efa195b20a849b4c55ea12506","license":"MIT","urls":["bzz-raw://881a2592c748603593d6939a22fce6feb205a95a8e49422a5736ae8edd8833d8","dweb:/ipfs/QmZgV8kZFJVxx5ihrYywnJMXt7nvJH7DMtX2MCvpF5zN88"]},"contracts/IERC721Metadata.sol":{"keccak256":"0x867ef5399056dc94c3eb0a403ae2d758b151902a9223dfa50b9fa39cb815c2fb","license":"MIT","urls":["bzz-raw://56a2ca5b54defdace0c7c17bc238e3c7df9875ac67f8a3483c43243a152722ce","dweb:/ipfs/QmNgmCm69D3vkZn6Bh33qrjNyXeAa4vuBDeCAchWpKLGEg"]},"contracts/IERC721Receiver.sol":{"keccak256":"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f","license":"MIT","urls":["bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f","dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"]},"contracts/IOwnable.sol":{"keccak256":"0x60842ae4982cac715c17920d4bd8870dce5663492699fe0c9d65b1deeab089f1","license":"MIT","urls":["bzz-raw://f29ec256bd975606e6350a3b8018e9843573117be393b523359f572efb839258","dweb:/ipfs/QmSMHfDshgwrUuJxCaPR47DpLkQmTwqkcjN6nmVDUiuYhv"]},"contracts/IPausable.sol":{"keccak256":"0x2f5e4b3185e91aa46fbd6fee685956646b2db8341cdf5ba6166805aa5b189b41","license":"MIT","urls":["bzz-raw://64ab372962cae30e17c20ec45ea81c9ff9cb5f0f1bf424ca36ee7306f993d158","dweb:/ipfs/QmfLACx6uLAsHukPkWvTViMZ5cg2zarXXzmpz48FJuX3HX"]},"contracts/ITradable.sol":{"keccak256":"0x37c668b61b9e8dabdfe3a75aa15e3ab6553e43fcde5fe4a187ef7d8aaa58fdc2","license":"MIT","urls":["bzz-raw://aa707c699daf3de24c4f9f27b1c1b49d523b86f41d30efad36416ef0686073e7","dweb:/ipfs/QmY69uHH7mQAZ3DJjAXhgwqTR3hyzsDeKLamNw7gxnDCaE"]},"contracts/IWhitelistable.sol":{"keccak256":"0xb8d1bfaec466d9ca20b88f4934f2eb1cf55ba135cfffc16270ad13734bd467ea","license":"MIT","urls":["bzz-raw://4873cf72a0033f89094f87b8d8ebd48739f192aca28ee6e87aee96a0d5738a4a","dweb:/ipfs/QmX1ijwt397SD8MG7WNm4EERcp3SyE7mwB2XdsrjJALqAX"]},"contracts/MerkleProof.sol":{"keccak256":"0xea64fbaccbf9d8c235cf6838240ddcebb97f9fc383660289e9dff32e4fb85f7a","license":"MIT","urls":["bzz-raw://1e8a1dd0eac2fa865dc9a052bee01eec31677d7bc01b5b5aa825d820f3f1b343","dweb:/ipfs/QmR8WuNeoAvJhnL7msQfQwaZEkwVnNyNDUNBL3Y616ohYa"]}},"version":1}